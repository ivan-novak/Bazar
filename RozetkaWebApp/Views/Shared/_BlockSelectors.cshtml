@using System.Text.RegularExpressions
@using System.Data.Entity.SqlServer


<style>
    .bar:hover {
    background-color: WhiteSmoke;       
    }
</style>

@{

    string path = "/Catalogs/Details/" + Model.CatalogId.ToString()
            + (("?Filter=")) + ViewBag.Filter
            + (("&pageSize=")) + ViewBag.PageSize
            + (("&page=")) + ViewBag.Page
            + (("&orderBy=")) + ViewBag.OrderBy; 



    foreach (Filter i in ViewBag.Selectors)
    {
        <div class="form-check m-0 p-0 mr-2 small">
            <h6> @i.Label </h6>
            <div class="form-check overflow-auto" style="max-height: 200px; scrollbar-width: thin;">
                @foreach (string s in i.Value.Split(','))
                {
                    string chioceCode = "|" + (i.PropertyId.ToString()) + "=" + s.Replace("+","").Replace("&", "").Replace("?", "").Replace("=", "").Replace(" ",""); 
                    <div class="bar">
                        @if(ViewBag.Chioces != null && ViewBag.Chioces?.Contains(chioceCode))
                        {
                            string newChoice = ViewBag.Chioces.Replace(chioceCode, "");
                            string newPath = path+"&chioces="+newChoice;
                            <input class="form-check-input" type="checkbox" id="@chioceCode" checked onclick="location.href='@newPath';"> 
                        }
                        else
                        {
                            string newChoice = ViewBag.Chioces+chioceCode;
                            string newPath = path+"&chioces="+newChoice;
                            <input class="form-check-input" type="checkbox" id="@chioceCode" onclick="location.href='@newPath';">
                        }
                        <label class="form-check-label" for="@chioceCode">@s</label>
                    </div>
                }
            </div>
            <hr></hr>
        </div>


    }
}